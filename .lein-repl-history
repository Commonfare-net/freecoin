(biginteger 10)
(type (biginteger 10))
(:use freecoin.core-test :reload)
(:use 'midje.repl
)
(:use 'midje.repl)
(autoload)
(autotest)
(use 'midje.repl)
(autotest)
(pst *me)
(autotest)
(use freecoin.secretshare :reload)
(autotest)
(public-info)
(freecoin.secretshare/public-info)
(freecoin.secretshare/public-info 4 8 (prime4096) "cazzo")
(freecoin.secretshare/public-info 4 8 (freecoin.secretshare/prime4096) "cazzo")
(freecoin.secretshare/public-info 8 4 (freecoin.secretshare/prime4096) "cazzo")
(autotest)
(freecoin.secretshare/public-info 8 4 (freecoin.secretshare/prime4096) "cazzo")
(autotest)
(use 'freecoin.core-test :reload)
(autotest)
          (clojure.string/split
           (slurp (java.io.FileReader. "/proc/cpuinfo"))
)
          (clojure.string/split
           (slurp (java.io.FileReader. "/proc/cpuinfo"))
":"
)
          (clojure.string/split
           (slurp (java.io.FileReader. "/proc/cpuinfo"))
#"\n")
(autotest)
(pst *me)
(autotest)
(rand/random-int 20)
(freecoin.random/random-int 20)
(freecoin.random/random-digit)
(freecoin.random/random-int )
(freecoin.random/random-int 1)
(autotest)
(freecoin.random/random-int 1)
(freecoin.random/random-int 122)
(autotest)
(freecoin.random/random-int 122)
(autotest)
(pst *me)
(hashids.core/encode hash_opts 123)
(hashids.core/encode freecoin.core-test/hash_opts 123)
(hashids.core/encode freecoin.core-test/hash_opts 123e324)
(hashids.core/encode freecoin.core-test/hash_opts 1234424324)
(hashids.core/encode freecoin.core-test/hash_opts (biginteger 1234424324))
(hashids.core/decode freecoin.core-test/hash_opts "QR8L6JR6")
(pst *me)
(autotest)
(pst *me)
(autotest)
(use 'midje.core)
(use 'midje)
(use midje)
(use midje.sweet)
(use 'midje.sweet)
(autotest)
(use 'midje.repl)
(autotest)
freecoin.random/create 10
(freecoin.random/create 10)
(freecoin.random/intchain 10)
(read-string (freecoin.random/intchain 10))
(freecoin.random/create 10)
(read-string (freecoin.random/intchain 10))
(freecoin.random/create 10)
(autotest)
(read-string (freecoin.random/intchain 10))
(freecoin.random/intchain 10)
(freecoin.random/create 10)
(entropy 5267998819)
(freecoin.random/entropy 5267998819)
(freecoin.random/entropy "5267998819")
(freecoin.random/entropy "7568523377")
(freecoin.random/intchain 10)
(freecoin.random/intchain 20)
(entropy (freecoin.random/intchain 20))
(freecoin.random/entropy (freecoin.random/intchain 20))
(freecoin.random/entropy (freecoin.random/intchain 30))
(freecoin.random/entropy (freecoin.random/intchain 20))
(freecoin.random/entropy (freecoin.random/intchain 18))
(freecoin.random/create 10)
(freecoin.random/create 18)
(autotest)
(freecoin.random/create 18)
(autotest)
(freecoin.random/entropy "600007124702593438")
(freecoin.random/entropy "60000712470259343")
(freecoin.random/entropy "600007124702593438")
(freecoin.random/entropy "610007124702593438")
(freecoin.random/entropy "612007124702593438")
(freecoin.random/entropy "612307124702593438")
(freecoin.random/entropy "612347124702593438")
(freecoin.random/entropy "612367124702593438")
(freecoin.random/entropy "612267124702593438")
(freecoin.random/entropy "000000000000000000")
(freecoin.random/entropy "000000000000000001")
(freecoin.random/entropy "000000000000000021")
(autotest)
(use 'midje.repl)
(autotest)
(use 'midje.repl)
(autotest)
(freecoin.random/entropy "994532083117073842FXC415805449286076437FXC117800611549436825FXC153802550634997285"
)
(autotest)
((com.tiemens.secretshare.engine.SecretShare/getPrimeUsedFor4096bigSecretPayload)
)
(com.tiemens.secretshare.engine.SecretShare/getPrimeUsedFor4096bigSecretPayload)
(com.tiemens.secretshare.engine.SecretShare/getPrimeUsedFor384bigSecretPayload)
(com.tiemens.secretshare.engine.SecretShare/getPrimeUsedFor384bitSecretPayload)
(com.tiemens.secretshare.engine.SecretShare/getPrimeUsedFor4096bigSecretPayload)
(autotest)
clojure.pprint
(clojure.pprint secret)
(clojure.pprint/pprint secret)
(clojure.pprint/pprint freecoin.core-test/secret)
(:plain freecoin.core-test/secret)
(clojure.pprint/pprint secret-conf)
(clojure.pprint/pprint freecoin.core-test/secret-conf)
(autotest)
println freecoin.core-test/secret-pie
(println freecoin.core-test/secret-pie)
(println freecoin.core-test/secret-pieces)
(clojure.pprint/pprint freecoin.core-test/secret-pieces)
(seq (clojure.pprint/pprint freecoin.core-test/secret-pieces))
(first (clojure.pprint/pprint freecoin.core-test/secret-pieces))
(clojure.pprint/pprint (first freecoin.core-test/secret-pieces))
(clojure.pprint/pprint (:share (first freecoin.core-test/secret-pieces)))
(autotest)
(seq clojure.pprint/pprint secret-pieces)
(seq clojure.pprint/pprint freecoin.core-test/secret-pieces)
(seq freecoin.core-test/secret-pieces)
(rest freecoin.core-test/secret-pieces)
(:index (rest freecoin.core-test/secret-pieces))
(rest (:index freecoin.core-test/secret-pieces)))
(rest (:index freecoin.core-test/secret-pieces))
((:index freecoin.core-test/secret-pieces))
(:index freecoin.core-test/secret-pieces)
(freecoin.core-test/secret-pieces)
(seq freecoin.core-test/secret-pieces)
(rest (seq freecoin.core-test/secret-pieces))
(rest freecoin.core-test/secret-pieces))
(rest freecoin.core-test/secret-pieces)
(:index (rest freecoin.core-test/secret-pieces))
(rest freecoin.core-test/secret-pieces))
(rest freecoin.core-test/secret-pieces)
(def share (rest freecoin.core-test/secret-pieces))
rest freecoin.core-test/secret-pieces)
(rest freecoin.core-test/secret-pieces)
(seq clojure.pprint/pprint secret-pieces) freecoin.core-test/secret-pieces)
(seq clojure.pprint/pprint freecoin.core-test/secret-pieces)
(seq (clojure.pprint/pprint freecoin.core-test/secret-pieces))
(:share (seq (clojure.pprint/pprint freecoin.core-test/secret-pieces)))
(seq (clojure.pprint/pprint freecoin.core-test/secret-pieces)))
(seq (clojure.pprint/pprint freecoin.core-test/secret-pieces))
(seq freecoin.core-test/secret-pieces))
(seq freecoin.core-test/secret-pieces)
(seq (clojure.pprint/pprint freecoin.core-test/secret-pieces))
(clojure.pprint/pprint (seq freecoin.core-test/secret-pieces))
(:index (seq freecoin.core-test/secret-pieces))
(map :index (seq freecoin.core-test/secret-pieces))
(map :share (seq freecoin.core-test/secret-pieces))
(clojure.pprint/pprint (map :share (seq freecoin.core-test/secret-pieces))
(clojure.pprint/pprint (map :share (seq freecoin.core-test/secret-pieces)))
(map :share (seq freecoin.core-test/secret-pieces))
(map :index (seq freecoin.core-test/secret-pieces))
(map :index freecoin.core-test/secret-pieces))
(map :index freecoin.core-test/secret-pieces)
(map :share freecoin.core-test/secret-pieces)
(clojure.pprint/pprint (map :share freecoin.core-test/secret-pieces))
(map :share freecoin.core-test/secret-pieces)
(clojure.pprint/pprint (map :share freecoin.core-test/secret-pieces))
(autotest)
(seq(seq [  1 2 3 4 5 ])
(seq [  1 2 3 4 5 ])
(seq [ (def 1 { :caz } 2 3 4 5 ])
(seq [ (def 1 { :caz }) 2 3 4 5 ])
(seq [ 2 3 4 5 ])
[ 2 3 4 5 ]
(seq println [ 2 3 4 5 ])
(seq [ 2 3 4 5 ] println)
(seq [ 2 3 4 5 ])
(use 'midje.repl)
(freecoin.secretshare/map2conf pi)
(freecoin.secretshare/map2conf freecoin.core-test/secret)
(freecoin.secretshare/map2conf freecoin.core-test/secret-conf)
(freecoin.core-test/secret-conf)
(freecoin.core-test/secret)
(autotest)
(shuffle [1 2 3 4 5])
